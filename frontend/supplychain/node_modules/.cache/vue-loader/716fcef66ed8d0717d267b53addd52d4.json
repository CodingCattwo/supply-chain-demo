{"remainingRequest":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/src/views/create/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/src/views/create/index.vue","mtime":1623821705459},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jcmVhdGUtZm9ybSB7CiAgd2lkdGg6IDcwJTsKICBoZWlnaHQ6IDkwMHB4OwogIG1hcmdpbjogNDBweCBhdXRvOwogIC5lbC1jb2wgLmVsLWZvcm0taXRlbV9fY29udGVudCwKICAuZWwtaW5wdXQgaW5wdXQgewogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgfQogIC5lbC1jb2wgLmVsLWlucHV0IGlucHV0IHsKICAgIG1hcmdpbi1sZWZ0OiAwOwogIH0KICAuZWwtc2VsZWN0IHsKICAgIGRpc3BsYXk6IGJsb2NrOwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/create","sourcesContent":["<template>\n  <div>\n    <div class=\"create-form\">\n      <el-form\n        :model=\"dynamicValidateForm\"\n        :rules=\"createRules\"\n        ref=\"dynamicValidateForm\"\n        label-width=\"100px\"\n        class=\"demo-dynamic\"\n      >\n        <el-form-item prop=\"title\" label=\"标题\">\n          <el-input v-model=\"dynamicValidateForm.title\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"desc\" label=\"描述\">\n          <el-input v-model=\"dynamicValidateForm.desc\"></el-input>\n        </el-form-item>\n        <el-form-item\n          class=\"demo-form-inline\"\n          v-for=\"(chain, index) in dynamicValidateForm.itemList\"\n          :label=\"'参与方' + index\"\n          :key=\"chain.key\"\n        >\n          <el-row>\n            <el-col :span=\"8\">\n              <el-form-item\n                label=\"\"\n                :prop=\"'itemList.' + index + '.role'\"\n                :rules=\"createRules.role\"\n              >\n                <el-input v-model=\"chain.role\" placeholder=\"角色\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"8\">\n              <el-form-item\n                label=\"\"\n                :prop=\"'itemList.' + index + '.portion'\"\n                :rules=\"createRules.portion\"\n              >\n                <el-input\n                  type=\"number\"\n                  maxlength=\"2\"\n                  v-model=\"chain.portion\"\n                  placeholder=\"份额\"\n                >\n                  <template slot=\"append\">%</template>\n                </el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"7\">\n              <el-form-item\n                label=\"\"\n                :prop=\"'itemList.' + index + '.id'\"\n                :rules=\"createRules.id\"\n              >\n                <el-select\n                  v-model=\"chain.id\"\n                  placeholder=\"参与者\"\n                  :disabled=\"chain.isSelect\"\n                >\n                  <template>\n                    <el-option\n                      v-for=\"item in roleList\"\n                      :label=\"item.orgName\"\n                      :value=\"item.id\"\n                      :key=\"item.id\"\n                    ></el-option>\n                  </template>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"1\">\n              <div style=\"padding-left:5px\" v-if=\"!chain.isSelect\">\n                <el-button type=\"text\" @click=\"removeChain(chain)\"\n                  >移除</el-button\n                >\n              </div>\n            </el-col>\n          </el-row>\n          <!--  <el-button @click.prevent=\"removeChain(chain)\">删除</el-button> -->\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('dynamicValidateForm')\"\n            >提交</el-button\n          >\n          <el-button @click=\"addChain\">新增</el-button>\n          <!--  <el-button @click=\"resetForm('dynamicValidateForm')\">重置</el-button> -->\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getParticipaterId, getUserId } from \"@/utils/auth\";\nimport { getSelectList, createChain } from \"@/api/table\";\nimport uuidv4 from \"uuid/v4\";\nexport default {\n  data() {\n    const isDecimal = (rule, value, callback) => {\n      const reg = /^([1]?\\d{1,2})$/;\n      if (!reg.test(value)) {\n        callback(new Error(\"请输入1-100之间整数\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      createRules: {\n        title: [{ required: true, message: \"请输入标题\", trigger: \"blur\" }],\n        desc: [{ required: true, message: \"请输入描述\", trigger: \"blur\" }],\n        role: [{ required: true, message: \"请输入角色\", trigger: \"blur\" }],\n        portion: [{ validator: isDecimal, trigger: \"blur\" }],\n        id: [{ required: true, message: \"请选择参与者\", trigger: \"blur\" }],\n      },\n      test: \"\",\n      roleList: [],\n\n      level: 1,\n      nextUuid: \"\",\n      dynamicValidateForm: {\n        itemList: [\n          {\n            id: \"\",\n            role: \"\",\n            portion: \"\",\n            itemId: this.createUuid(),\n            levelOnChain: 0,\n            isSelect: true,\n            participaterId: \"\",\n          },\n        ],\n        title: \"\",\n        userId: \"\",\n      },\n    };\n  },\n  created() {\n    this.getSeletData();\n  },\n  methods: {\n    createUuid() {\n      let uuid = uuidv4();\n      uuid = uuid.split(\"-\").join(\"\");\n      return uuid;\n    },\n    getSeletData() {\n      const userId = getUserId();\n      const pId = getParticipaterId();\n      this.dynamicValidateForm.userId = userId;\n      this.preUuid = this.dynamicValidateForm.itemList[0].itemId;\n      getSelectList().then((res) => {\n        this.roleList = res.data;\n        this.roleList.forEach((item) => {\n          if (item.id == pId) {\n            this.dynamicValidateForm.itemList[0].id = item.id;\n          }\n        });\n      });\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          const data = this.dynamicValidateForm.itemList;\n          let totalRatio = data.reduce((prev, cur) => {\n            return parseFloat(cur.portion) + parseFloat(prev);\n          }, 0);\n\n          if (totalRatio !== 100) {\n            this.$message({\n              message: \"请输入正确的份额\",\n              type: \"warning\",\n            });\n          } else {\n            let arrayId = [];\n            data.forEach((item) => {\n              arrayId.push(item.id);\n            });\n            const noRepeatId = [...new Set(arrayId)];\n\n            if (arrayId.length === noRepeatId.length) {\n              this.dynamicValidateForm.itemList.forEach((item, index) => {\n                item.participaterId = item.id;\n                item.levelOnChain = index;\n              });\n              console.log(this.dynamicValidateForm);\n              createChain(this.dynamicValidateForm).then((res) => {\n                if (res.code === 0) {\n                  this.$confirm(\"提交成功\", \"提交成功\", {\n                    confirmButtonText: \"返回\",\n                    type: \"success\",\n                    showCancelButton: false,\n                    closeOnClickModal: false,\n                  }).then(() => {\n                    this.$router.push({ path: \"/list\" });\n                  });\n                }\n              });\n            } else {\n              this.$message({\n                message: \"参与者不能重复选择\",\n                type: \"error\",\n              });\n              return;\n            }\n          }\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    removeChain(item) {\n      const chainIndex = this.dynamicValidateForm.itemList.indexOf(item);\n      console.log(this.dynamicValidateForm.itemList.length - 1);\n      console.log(chainIndex);\n      if (chainIndex !== this.dynamicValidateForm.itemList.length - 1) {\n        const preItem = this.dynamicValidateForm.itemList[chainIndex - 1];\n        this.dynamicValidateForm.itemList[chainIndex + 1].lastItemId =\n          preItem.itemId;\n      }\n\n      if (chainIndex !== -1) {\n        this.dynamicValidateForm.itemList.splice(chainIndex, 1);\n      }\n    },\n    addChain() {\n      this.dynamicValidateForm.itemList.push({\n        participaterId: \"\",\n        role: \"\",\n        portion: \"\",\n        //levelOnChain: this.level++,\n        itemId: this.createUuid(),\n        lastItemId: this.preUuid,\n        isSelect: false,\n      });\n      const preIndex = this.dynamicValidateForm.itemList.length - 1;\n      this.preUuid = this.dynamicValidateForm.itemList[preIndex].itemId;\n      console.log(this.dynamicValidateForm.itemList);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.create-form {\n  width: 70%;\n  height: 900px;\n  margin: 40px auto;\n  .el-col .el-form-item__content,\n  .el-input input {\n    margin-left: 10px;\n  }\n  .el-col .el-input input {\n    margin-left: 0;\n  }\n  .el-select {\n    display: block;\n  }\n}\n</style>\n"]}]}