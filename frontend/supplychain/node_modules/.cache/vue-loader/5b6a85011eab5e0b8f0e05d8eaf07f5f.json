{"remainingRequest":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/src/views/pay/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/src/views/pay/index.vue","mtime":1623815030940},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lannywu/A2021/06/0616/supply-chain-demo/frontend/supplychain/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldFNpZ25JbmZvLCB0b1BheSB9IGZyb20gIkAvYXBpL3RhYmxlIjsKaW1wb3J0IHsgZ2V0VXNlcklkIH0gZnJvbSAiQC91dGlscy9hdXRoIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICBjb25zdCB2YWxpZEFtb3VudCA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgY29uc3QgcmVnID0gL15cZCsoXC5cZHsxLDJ9KT8kLzsKICAgICAgaWYgKCFyZWcudGVzdCh2YWx1ZSkpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoIuivt+i+k+WFpeato+ehrueahOmHkeminSIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwogICAgcmV0dXJuIHsKICAgICAgcGF5RGF0YTogW10sCiAgICAgIGRpYWxvZ1BheVZpc2libGU6IGZhbHNlLAogICAgICBhbW91bnRSdWxlczogewogICAgICAgIHRvdGFsQW1vdW50OiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl6YeR6aKdIiwgdHJpZ2dlcjogImJsdXIiIH0sCiAgICAgICAgICB7IHZhbGlkYXRvcjogdmFsaWRBbW91bnQsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgXQogICAgICB9LAogICAgICBzaWduRGF0YTogW10sCiAgICAgIGZvcm06IHsKICAgICAgICBjaGFpbklkOiAiIiwKICAgICAgICB0b3RhbEFtb3VudDogIiIKICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFNpZ25EYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnb0JhY2soKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogIi9saXN0IiB9KTsKICAgIH0sCiAgICBnZXRTaWduRGF0YSgpIHsKICAgICAgY29uc3QgaWQgPSBnZXRVc2VySWQoKTsKICAgICAgZ2V0U2lnbkluZm8oaWQpLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLnNpZ25EYXRhID0gcmVzLmRhdGE7CiAgICAgICAgdGhpcy5mb3JtLmNoYWluSWQgPSB0aGlzLnNpZ25EYXRhWzBdLmNoYWluSWQ7CiAgICAgIH0pOwogICAgfSwKICAgIHN1Ym1pdFBheUluZm8oZm9ybU5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnN0IHBhcmFtcyA9IHsKICAgICAgICBjaGFpbklkOiB0aGlzLmZvcm0uY2hhaW5JZCwKICAgICAgICB0b3RhbEFtb3VudDogdGhpcy5mb3JtLnRvdGFsQW1vdW50ICogMTAwCiAgICAgIH07CgogICAgICB0b1BheShwYXJhbXMpLnRoZW4ocmVzID0+IHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsKICAgICAgICAgIHRoaXMucGF5RGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgdGhpcy5kaWFsb2dQYXlWaXNpYmxlID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/pay","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form\n      ref=\"form\"\n      :model=\"form\"\n      :rules=\"amountRules\"\n      label-width=\"120px\"\n      class=\"form-box\"\n    >\n      <el-form-item label=\"链路选择\">\n        <el-select v-model=\"form.chainId\" placeholder=\"链路选择\">\n          <el-option\n            v-for=\"item in signData\"\n            :label=\"item.title\"\n            :value=\"item.chainId\"\n            :key=\"item.chainId\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"支付金额\" prop=\"totalAmount\">\n        <el-input v-model=\"form.totalAmount\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitPayInfo('form')\"\n          >提交</el-button\n        >\n        <el-button @click=\"goBack\">返回</el-button>\n      </el-form-item>\n    </el-form>\n    <el-dialog title=\"支付成功\" :visible.sync=\"dialogPayVisible\">\n      <el-table :data=\"payData\">\n        <el-table-column property=\"txHash\" label=\"交易地址\"></el-table-column>\n        <el-table-column label=\"支付对象及金额\" width=\"200\">\n          <template slot-scope=\"scope\"\n            >{{ scope.row.orgName }}:<b>{{\n              scope.row.amount / 100\n            }}</b></template\n          ></el-table-column\n        >\n        <el-table-column label=\"余额\">\n          <template slot-scope=\"scope\"\n            >{{ scope.row.orgName }}:<b>{{\n              scope.row.balance / 100\n            }}</b></template\n          ></el-table-column\n        >\n      </el-table>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { getSignInfo, toPay } from \"@/api/table\";\nimport { getUserId } from \"@/utils/auth\";\nexport default {\n  data() {\n    const validAmount = (rule, value, callback) => {\n      const reg = /^\\d+(\\.\\d{1,2})?$/;\n      if (!reg.test(value)) {\n        callback(new Error(\"请输入正确的金额\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      payData: [],\n      dialogPayVisible: false,\n      amountRules: {\n        totalAmount: [\n          { required: true, message: \"请输入金额\", trigger: \"blur\" },\n          { validator: validAmount, trigger: \"blur\" }\n        ]\n      },\n      signData: [],\n      form: {\n        chainId: \"\",\n        totalAmount: \"\"\n      }\n    };\n  },\n  created() {\n    this.getSignData();\n  },\n  methods: {\n    goBack() {\n      this.$router.push({ path: \"/list\" });\n    },\n    getSignData() {\n      const id = getUserId();\n      getSignInfo(id).then(res => {\n        this.signData = res.data;\n        this.form.chainId = this.signData[0].chainId;\n      });\n    },\n    submitPayInfo(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n        }\n      });\n      const params = {\n        chainId: this.form.chainId,\n        totalAmount: this.form.totalAmount * 100\n      };\n\n      toPay(params).then(res => {\n        if (res.code === 0) {\n          this.payData = res.data;\n          this.dialogPayVisible = true;\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.el-select {\n  width: 100%;\n}\n.form-box {\n  width: 40%;\n}\n</style>\n"]}]}